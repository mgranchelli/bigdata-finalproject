version: "3.9"

services:
  
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - "2181:2181"
    environment:
      - ZOO_ENABLE_AUTH=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    depends_on:
      - "zookeeper"
    ports:
      - "9092:9092"
    expose:
     - "9093"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes

      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  iot-data-producer:
    image: iot-data-producer
    container_name: iot-source
    depends_on:
      - "kafka"
    tty: true                   # persistence

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    user: root
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark


  spark-worker-1:
    image: bitnami/spark:latest
    container_name: spark-worker-1
    user: root
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  influx:
    image: bitnami/influxdb:latest
    ports:
     - "8083:8083"
     - "8086:8086"
    environment:
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - INFLUXDB_ADMIN_USER_PASSWORD=password
      - INFLUXDB_USER=user
      - INFLUXDB_USER_PASSWORD=password
      - INFLUXDB_DB=my_database
      - INFLUXDB_ADMIN_USER_TOKEN=2c83186a-caab-425a-9594-9d4c00544939


  grafana:
    image: grafana/grafana
    environment:
      GF_LOG_LEVEL: debug 
      GF_LOG.CONSOLE_LEVEL: debug
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_NAME: Main Org.
      GF_AUTH_ANONYMOUS_ORG_ROLE: Editor
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
     - "3000:3000"
    depends_on:
     - influx  